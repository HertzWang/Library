{
  "arrayf" : "- (NSArray *)<#func#> {\n    <#Doing#>\n}",
  "makecy" : "make.centerY.mas_equalTo(<#Number#>);",
  "make" : "[<#Object#> mas_makeConstraints:^(MASConstraintMaker *make) {\n    <#Setting#>\n}];",
  "strong" : "@property (nonatomic, strong) <#Object#> *<#name#>;",
  "debug" : "#if DEBUG\n    \/\/ haizhou.wang Debug代码\n    <#TODO#>\n#endif",
  "makel" : "make.left.mas_equalTo(<#Number#>);",
  "getter" : "#pragma mark - Getter\n\n<#Doing#>",
  "router" : "[WM_ROUTER openURL:WM_ROUTER_PUSH_URL(@\"<#name#>\")];",
  "view" : "UIView *view = [[UIView alloc] init];",
  "imageview" : "UIImageView *imageView = [[UIImageView alloc] init];\n<#Do#>",
  "lazy" : "- (<#type#> *)<#name#> {\n    if (!_<#name#>) {\n        _<#name#> = <#statements#>;\n    }\n    return _<#name#>;\n}",
  "registercell" : "[self.tableView registerClass:[<#(nullable Class)#> class] forCellReuseIdentifier:[<#(nonnull NSString *)#> reuseIdentifier]];",
  "makesize" : "make.size.mas_equalTo(CGSizeMake(<#CGFloat width#>, <#CGFloat height#>));",
  "funcupdate" : "\/\/ <#修改说明#> v<#大版本#>.<#小版本#>.<#修正版本#> by haizhou.wang",
  "ss" : "@strongify(self);\n<#Do#>",
  "network" : "if (WM_STR_IS_EMPTY(<#arg1#>) || WM_IS_NIL_Or_NULL(<#arg2#>)) {\n    \n    return;\n}\nNSDictionary *params = @{@\"<#key1#>\" : <#arg1#>, @\"<#key2#>\" : <#arg2#>};\n@weakify(self);\n[WMNetworking postWithUrl:@\"<#url#>\" params:params success:^(id  _Nonnull response) {\n    if (weak_self) {\n        @strongify(self);\n        NSDictionary *responseDict = (NSDictionary *)response;\n        NSInteger code = [responseDict[k_common_code] integerValue];\n        if (code == 1) {\n            <#TODO#>\n            WM_REQUEST_COMPLETION();\n        } else {\n            [WMToast showToastWithMsg:responseDict[k_common_desc]];\n            WM_REQUEST_COMPLETION();\n        }\n    }\n} fail:^(NSError * _Nonnull error) {\n    [WMToast showToastWithErrorCode:error.code];\n    WM_REQUEST_COMPLETION();\n}];",
  "assign" : "@property (nonatomic, assign) <#Object#> <#name#>;",
  "label" : "UILabel *label = [[UILabel alloc] init];\n<#Do#>",
  "dictf" : "- (NSDictionary *)<#func#> {\n    <#Doing#>\n}",
  "guard" : "if (<#condition#>) {\n    return;\n}",
  "maker" : "make.right.mas_equalTo(<#Number#>);",
  "stringf" : "- (NSString *)<#func#> {\n    <#Doing#>\n}",
  "voidf" : "- (void)<#func#> {\n    <#Doing#>\n}",
  "mark" : "#pragma mark - <#Name#>",
  "wmtable" : "WMBaseTableView *tableView = [[WMBaseTableView alloc] init];\n<#Doing#>",
  "routerp" : "[WM_ROUTER openURL:WM_ROUTER_PUSH_URL(@\"<#name#>\") withParameters:@{ <#KEY#> : <#VALUE#>}];",
  "boolf" : "- (BOOL)<#func#> {\n    <#Doing#>\n}",
  "todo" : "\/\/ TODO: whz <#doing#>",
  "maket" : "make.top.mas_equalTo(<#Number#>);",
  "tableview" : "WMBaseTableView *tableView = [[WMBaseTableView alloc] init];\n<#Do#>",
  "makecx" : "make.centerX.mas_equalTo(<#Number#>);",
  "ws" : "@weakify(self);\n<#Do#>",
  "shared" : "+ (instancetype)shared {\n    static <#Class#> *instance = nil;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        instance = [[<#Class#> alloc] init];\n    });\n    \n    return instance;\n}",
  "copy" : "@property (nonatomic, copy) <#Object#> *<#name#>;",
  "makeb" : "make.bottom.mas_equalTo(<#Number#>);"
}